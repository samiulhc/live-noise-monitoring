<!DOCTYPE html>
<html>
    <head>
        {{!-- <meta http-equiv="Content-Security-Policy" content="default-src 'self'; font-src 'self'; script-src 'unsafe-inline';"> <!--data: fonts.gstatic.com;--> --}}
        {{!-- <meta http-equiv="Content-Security-Policy" content="default-src 'self'; font-src 'self'; script-src 'unsafe-eval' https://cdn.plot.ly/plotly-latest.min.js http://code.jquery.com/jquery-3.3.1.js;"> <!--data: fonts.gstatic.com;--> --}}
        <link rel = "stylesheet" type="text/css" href = "/css/styles.css">
        <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
        <script
            src="http://code.jquery.com/jquery-3.3.1.js"
            integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60="
            crossorigin="anonymous">
        </script>
        <!-- <script src="Plotly.js"></script> -->
        <title>Live Noise Monitoring</title>
    </head>
    
    <body>
        <div class="headerContainer">
            <h1>Live Noise Monitoring</h1>
        </div>
        {{#each data as |item|}}
            <div class = "graphMainContainer">
                <p> NTi Meter Location: {{item.name}}</p> 
                <p> NTi Meter Serial No: {{item.netBoxSerialNumber}} </p>
                <div class = "graphContainer" id= "graphContainer{{@index}}"></div>
            </div>  
        {{/each}}
        {{!-- <script type="text/javascript" src="/js/plot.js"></script> --}}

        <script>
            function timedRefresh(timeoutPeriod) {
                setTimeout("location.reload(true);",timeoutPeriod);
            }
            
            window.onload = timedRefresh(300000);   // Reload page
            var layout = {
                title: 'Continuous Sound Level',
                showlegened: 'false',
                yaxis:{
                    title:'Sound Level (dBA)',
                    range:[30,90],
                    mirror: true,
                    showline:true
                },
                xaxis:{
                    title:'Time',
                    mirror: true,
                    showline:true
                }
            }

            {{#each data as |item|}}
                var graphContainer = document.getElementById("graphContainer{{@index}}");
                
                Plotly.plot(graphContainer, [{
                    x: [{{{item.data_x}}}],
                    y: [{{item.data_y}}],
                    margin: { t: 0 },
                    type:'Line'} ],layout);
            {{/each}}
            //var interval = setInterval(function(){
            //    Plotly.extendTraces('graphContainer', { y: [[getRandomData()]] }, [0])
            //},200);
        </script>
    </body>
</html>